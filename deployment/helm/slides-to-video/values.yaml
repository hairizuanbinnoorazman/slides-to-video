global:
  image:
    registry: null

imagePullSecrets: []

serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true
  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: null
  # -- Image pull secrets for the service account
  imagePullSecrets: []
  # -- Annotations for the service account
  annotations: {}
  # -- Set this toggle to false to opt out of automounting API credentials for the service account
  automountServiceAccountToken: true

slidesToVideoManager:
  image: 
    registry: docker.io
    repository: slides-to-video-manager
    tag: null
    pullPolicy: IfNotPresent
  podSecurityContext: {}
  securityContext: {}
  annotations: {}
  imagePullSecrets: []
  resources: {}
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  config: {}
  extraSecretMounts: []
  extraConfigmapMounts: []
  
pdfSplitter:
  image: 
    registry: docker.io
    repository: pdf-splitter
    tag: null
    pullPolicy: IfNotPresent
  podSecurityContext: {}
  securityContext: {}
  annotations: {}
  imagePullSecrets: []
  resources: {}
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  config: {}
  extraSecretMounts: []
  extraConfigmapMounts: []

imageToVideo:
  image: 
    registry: docker.io
    repository: image-to-video
    tag: null
    pullPolicy: IfNotPresent
  podSecurityContext: {}
  securityContext: {}
  annotations: {}
  imagePullSecrets: []
  resources: {}
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  config: {}
  extraSecretMounts: []
  extraConfigmapMounts: []

concatenateVideo:
  image: 
    registry: docker.io
    repository: concatenate-video
    tag: null
    pullPolicy: IfNotPresent
  podSecurityContext: {}
  securityContext: {}
  annotations: {}
  imagePullSecrets: []
  resources: {}
  service:
    annotations: {}
    type: ClusterIP
    port: 8080
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  config: {}
  extraSecretMounts: []
  extraConfigmapMounts: []

mysql:
  enabled: true

nats:
  enabled: true
